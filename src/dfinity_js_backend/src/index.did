service: (record {reservationFee:nat64}) -> {
    addEnergyAssessment: (record {recommendations:text; name:text; assessmentDate:nat64; costSavings:nat64; pricePerDay:nat64; imageUrl:text; address:text; efficiencyRating:nat64}) -> (variant {Ok:record {id:text; recommendations:text; name:text; assessmentDate:nat64; isAvailable:bool; currentReservationEnds:opt nat64; costSavings:nat64; homeOwner:principal; pricePerDay:nat64; imageUrl:text; currentReservedTo:opt principal; address:text; efficiencyRating:nat64; isReserved:bool}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotBooked:text; Booked:text; NotOwner:text; PaymentCompleted:text}});
    completeReservation: (text, nat64, nat64, nat64) -> (variant {Ok:record {status:variant {PaymentPending:text; Completed:text}; noOfDays:nat64; memo:nat64; energyAssessmentId:text; payer:principal; amount:nat64; paid_at_block:opt nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotBooked:text; Booked:text; NotOwner:text; PaymentCompleted:text}});
    createReservationOrder: (text, nat64) -> (variant {Ok:record {status:variant {PaymentPending:text; Completed:text}; noOfDays:nat64; memo:nat64; energyAssessmentId:text; payer:principal; amount:nat64; paid_at_block:opt nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotBooked:text; Booked:text; NotOwner:text; PaymentCompleted:text}});
    deleteEnergyAssessment: (text) -> (variant {Ok:text; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotBooked:text; Booked:text; NotOwner:text; PaymentCompleted:text}});
    endReservation: (text) -> (variant {Ok:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotBooked:text; Booked:text; NotOwner:text; PaymentCompleted:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotBooked:text; Booked:text; NotOwner:text; PaymentCompleted:text}});
    getAddressFromPrincipal: (principal) -> (text) query;
    getBookings: () -> (vec record {status:variant {PaymentPending:text; Completed:text}; noOfDays:nat64; memo:nat64; energyAssessmentId:text; payer:principal; amount:nat64; paid_at_block:opt nat64}) query;
    getCanisterAddress: () -> (text) query;
    getEnergyAssessment: (text) -> (variant {Ok:record {id:text; recommendations:text; name:text; assessmentDate:nat64; isAvailable:bool; currentReservationEnds:opt nat64; costSavings:nat64; homeOwner:principal; pricePerDay:nat64; imageUrl:text; currentReservedTo:opt principal; address:text; efficiencyRating:nat64; isReserved:bool}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotBooked:text; Booked:text; NotOwner:text; PaymentCompleted:text}}) query;
    getEnergyAssessmentByRating: (nat64) -> (variant {Ok:vec record {id:text; recommendations:text; name:text; assessmentDate:nat64; isAvailable:bool; currentReservationEnds:opt nat64; costSavings:nat64; homeOwner:principal; pricePerDay:nat64; imageUrl:text; currentReservedTo:opt principal; address:text; efficiencyRating:nat64; isReserved:bool}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotBooked:text; Booked:text; NotOwner:text; PaymentCompleted:text}}) query;
    getEnergyAssessmentByRecommendations: (text, text) -> (variant {Ok:vec record {id:text; recommendations:text; name:text; assessmentDate:nat64; isAvailable:bool; currentReservationEnds:opt nat64; costSavings:nat64; homeOwner:principal; pricePerDay:nat64; imageUrl:text; currentReservedTo:opt principal; address:text; efficiencyRating:nat64; isReserved:bool}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotBooked:text; Booked:text; NotOwner:text; PaymentCompleted:text}}) query;
    getEnergyAssessments: () -> (vec record {id:text; recommendations:text; name:text; assessmentDate:nat64; isAvailable:bool; currentReservationEnds:opt nat64; costSavings:nat64; homeOwner:principal; pricePerDay:nat64; imageUrl:text; currentReservedTo:opt principal; address:text; efficiencyRating:nat64; isReserved:bool}) query;
    getPendings: () -> (vec record {status:variant {PaymentPending:text; Completed:text}; noOfDays:nat64; memo:nat64; energyAssessmentId:text; payer:principal; amount:nat64; paid_at_block:opt nat64}) query;
    getReservationFee: () -> (nat64) query;
}
